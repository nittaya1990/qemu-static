diff --git a/linux-user/syscall.c b/linux-user/syscall.c
index ccd3892b2..eb1a9dc5e 100644
--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -134,6 +134,13 @@
 #include "fd-trans.h"
 #include "tcg/tcg.h"
 
+#ifndef F_SHLCK
+#define F_SHLCK 8
+#endif
+#ifndef F_EXLCK
+#define F_EXLCK 4
+#endif
+
 #ifndef CLONE_IO
 #define CLONE_IO                0x80000000      /* Clone io context */
 #endif
@@ -3208,7 +3215,7 @@ static abi_long do_sendrecvmsg_locked(int fd, struct target_msghdr *msgp,
                                       int flags, int send)
 {
     abi_long ret, len;
-    struct msghdr msg;
+    struct msghdr msg = { 0 };
     abi_ulong count;
     struct iovec *vec;
     abi_ulong target_vec;
@@ -7273,9 +7280,20 @@ static inline abi_long host_to_target_timex64(abi_long target_addr,
 #define sigev_notify_thread_id _sigev_un._tid
 #endif
 
-static inline abi_long target_to_host_sigevent(struct sigevent *host_sevp,
+struct host_sigevent {
+    union sigval sigev_value;
+    int sigev_signo;
+    int sigev_notify;
+    union {
+       int _pad[64-sizeof(int) * 2 + sizeof(union sigval)];
+       int _tid;
+    } _sigev_un;
+};
+
+static inline abi_long target_to_host_sigevent(struct sigevent *sevp,
                                                abi_ulong target_addr)
 {
+    struct host_sigevent *host_sevp = (struct host_sigevent *) sevp;
     struct target_sigevent *target_sevp;
 
     if (!lock_user_struct(VERIFY_READ, target_sevp, target_addr, 1)) {
@@ -7293,7 +7311,7 @@ static inline abi_long target_to_host_sigevent(struct sigevent *host_sevp,
     host_sevp->sigev_signo =
         target_to_host_signal(tswap32(target_sevp->sigev_signo));
     host_sevp->sigev_notify = tswap32(target_sevp->sigev_notify);
-    host_sevp->sigev_notify_thread_id = tswap32(target_sevp->_sigev_un._tid);
+    host_sevp->_sigev_un._tid = tswap32(target_sevp->_sigev_un._tid);
 
     unlock_user_struct(target_sevp, target_addr, 1);
     return 0;
